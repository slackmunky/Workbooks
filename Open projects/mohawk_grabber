import pandas as pd
import numpy as np
import requests
from bs4 import BeautifulSoup
import openpyxl

desired_width = 320
pd.set_option('display.width', desired_width)
np.set_printoptions(linewidth=desired_width)
pd.set_option('display.max_columns', None)

mh_soup = BeautifulSoup(open(r"..\Data Files\mohawk_test.html"),
                        features="html.parser")

show_list_main = mh_soup.select(".list-view-item")
presenting = mh_soup.select(".presented-by")
headliners = mh_soup.select(".headliners")
dates = mh_soup.select(".dates")  # Done and used as dict keys.
supporting = mh_soup.select(".supports")
show_pages = mh_soup.select(".image-url")
show_time = mh_soup.selet(".start")
ages = mh_soup.select(".age-restriction")
prices = mh_soup.select(".price-range")

date_keys = []  # COMPLETED
for date in dates:
    mh_key = "mohawk_" + date.string.replace(
            ", ", "_").replace(" ", "_").lower()
    date_keys.append(str(mh_key))
#print(date_keys)
#print(artists[0])
headliner_list = []
for act in headliners:
    artist = str(act.string)
    headliner_list += artist
#print("acts:", len(headliner_list))
print(headliner_list[:5])

links = []
for link in show_pages:
    lnk = str(link.string)
    links.append(lnk)
#print(links)

# event_text = {}
# counter = 0
# for item in show_list_main:
#     key = date_keys[counter]
#     event_text[key] = []
#     details = list(item.stripped_strings)
#     event_text[key] = details
#     counter += 1






# tickets = mh_soup.select(".price-range")
# price_list = []
# for item in tickets:
#     prices = item.stripped_strings
#     price_list.extend(prices)

# print(price_list)
# big_money = {}
# table_rows = mh_soup.select("tr")

# counter = 1
# row_list = []

# for row in table_rows:
#     row_text = row.get_text("||")
#     row_list = row_text.split("||")
#     while len(row_list) < 15:
#         row_list.append("fill")
#     big_money[counter] = row_list
#     counter += 1


# for key in big_money:
#     while len(big_money[key]):

# df_bm = pd.DataFrame(big_money)
# df_bm_transposed = df_bm.transpose()
# print(df_bm)

#df_bm_transposed.to_excel(r"..\Data Files\show_spot_test.xlsx")
#     stats = turtle.find("ul")
#     stats_text = stats.get_text("|")
#     turtle_data[turtle_name] = stats_text.split("|")
#for key in big_money:
#    print(big_money[key])




# for column in column3:
#     try:
#         count = 1
#         print(type(item))
#         date_text = item.get_text()
#         details = [date_text]
#         #deets = item.find("td")
#         #print(type(deets))
#         #deets_text = deets.get_text("||")
#         #details.extend(deets)
#         big_money[count] = [details]
#     except TypeError:
#         print("Big ol' None in there.")

# print(big_money)

#     stats = turtle.find("ul")
#     stats_text = stats.get_text("|")
#     turtle_data[turtle_name] = stats_text.split("|")

